name: $(Date:yyyyMMdd).$(Rev:r)


trigger:
  batch: true
  branches:
    include:
    - master
    - feature/pipeline
  paths:
    exclude:
     - doc
     - ReadME.md

stages:
- stage: Build
  jobs:
  - job: 'BuildArtifacts'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: ShellScript@2
      displayName: Run Build App
      inputs:
        scriptPath: '$(Build.SourcesDirectory)/build.sh'
        failOnStandardError: false

    - task: CmdLine@2
      displayName: Run DB Migration and feed data
      inputs:
        script: ./TechChallengeApp updatedb
        workingDirectory: '$(Build.SourcesDirectory)/dist'
        failOnStderr: false

    - task: Docker@2
      displayName: Build and Push an image to container registry
      inputs:
        command: buildAndPush
        repository: sertechchallenge-docker
        Dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
        containerRegistry: sertechacr
        tags: latest

    - publish: $(Build.SourcesDirectory)/pipelines
      artifact: artifacts

- stage: DeployCode
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'feature/pipeline'))
  dependsOn: ['Build']
  jobs:
  - deployment: Deployment
    pool:
        vmImage: 'ubuntu-latest'
    environment: DEV
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: artifacts
          - template: 'templates/deploy.yaml'
